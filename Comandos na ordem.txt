*Dentro da pasta abrir com git bash
	git init -> Cria repositório vazio
	git add . --> Adiciona tudo que foi alterado
		git add nomeDoArquivo.txt -> Adiciona um arquivo específico
	git commit -m "Descrição" -> Comentario sobre o que foi feito
	git push ->
	git branch -m "novoNome" -> Renomeia o branch atual
	git push -u origin main

	git status -> verifica como está o processo

*Criar repositório no GitHub

**tudo deve estar commitado**
	git remote add origin https://github.com/usuario/pasta.git  **(só uma vez)
	git push -u origin main -> Empurra p github. Só na primeira vez depois o git sabe em qual projeto e qual branch vc está. 
		Daí p frente vc pode usar apenas git push. (Melhor forma para fazer primeiro)
	git push -> Depois que o repositorio e a branch foi especificado.

*Fazer login caso não tenha feito

	git config --global user.email "email@gmail.com"
	git config --global user.name "name"

*Fazer Push (upload)

	add no stage>Commit>push p git hub
	
	git add nomeDoArquivo ->adiciona ao stage se vc colocar o nome
	git add . -> Adiciona tudo que foi alterado
	git add *.txt -> Adiciona todos de uma exteção específica
	git commit -m "descrição da alteração"
	git push origin main ->empura o arquivo p o git hub

*****Mais usados*****
*Após tudo feito as alterações sempre usam esses tres codigos:

	git add .
	git commit -m "descrição da alteração"
	git push origin main
	ou (mais resumido abaixo)
	git push

*****SobreBranches*****
*Lista as branches existentes -> A branche atual aparece com asterisco
	git branch

*Criar nova branch
	git branch <nome_da_branch> -> Criar branch
	git checkout nomeDaBranch -> Navegar entre as branches
	git push -> Se der errado tem que pegar o endereço que o terminal vai fornecer
	git branch -v -> lista com detalhes
	git checkout -b nome-da-branch main -> cria dentro da main

*Merge
	*Primeiro tem que já estar na main
git checkout main
git merge novaBranch ->fdeve ser feito commit
git push origin main

*Clone e pull (pegar um projeto do git, seu ou de terceiro)
	*Pegar o link do repositório
git clone linkDoRepositório -> ex: https://github.com/usuario/pasta.git -> O arquivo vai para pasta
cd nomeDaPasta -> vc deve estar exatamente na pasta se ñ dá errado
git pull -> Pega os orquivos ou alteração

*Outros códigos

git rm arquivo.txt -> apaga o arquivo específico do git e do diretório(sem aspas)
	após apagar é necessário fazer commit depois o push
ls -> lista os arquivos no diretório
code . -> abre a pasta no vs code em nova janela(precisa do espaço antes do ponto)
clear -> limpa o painel
cd nomeDaPasta -> Navega nas pastas
git status -> Mostra a situação atual geral
git ignore -> Lista todos os arquivos e padrões que estão fora do versionamento.

*Atalho de copia e cola
Copiar Ctrl+ins
Colar Shif+ins
